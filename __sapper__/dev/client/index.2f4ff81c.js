import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as space, e as element, t as text, h as head_selector, b as detach_dev, c as claim_space, f as claim_element, g as children, j as claim_text, k as attr_dev, l as add_location, w as set_style, n as insert_hydration_dev, o as append_hydration_dev, x as prop_dev, p as noop } from './client.630baa59.js';

/* src\routes\settings\index.svelte generated by Svelte v3.55.1 */

const file = "src\\routes\\settings\\index.svelte";

function create_fragment(ctx) {
	let t0;
	let div3;
	let div2;
	let div1;
	let div0;
	let h1;
	let t1;
	let t2;
	let form;
	let fieldset0;
	let label0;
	let t3;
	let t4;
	let input0;
	let input0_value_value;
	let t5;
	let fieldset1;
	let label1;
	let t6;
	let t7;
	let input1;
	let input1_value_value;
	let t8;
	let fieldset2;
	let label2;
	let t9;
	let t10;
	let input2;
	let t11;
	let input3;
	let t12;
	let button;
	let t13;

	const block = {
		c: function create() {
			t0 = space();
			div3 = element("div");
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t1 = text("Your Settings:");
			t2 = space();
			form = element("form");
			fieldset0 = element("fieldset");
			label0 = element("label");
			t3 = text("User Name:");
			t4 = space();
			input0 = element("input");
			t5 = space();
			fieldset1 = element("fieldset");
			label1 = element("label");
			t6 = text("Email:");
			t7 = space();
			input1 = element("input");
			t8 = space();
			fieldset2 = element("fieldset");
			label2 = element("label");
			t9 = text("Password:");
			t10 = space();
			input2 = element("input");
			t11 = space();
			input3 = element("input");
			t12 = space();
			button = element("button");
			t13 = text("Save Settings");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = head_selector('svelte-8c6p0', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div3 = claim_element(nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Your Settings:");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div0_nodes);
			form = claim_element(div0_nodes, "FORM", { method: true, action: true });
			var form_nodes = children(form);
			fieldset0 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset0_nodes = children(fieldset0);
			label0 = claim_element(fieldset0_nodes, "LABEL", {});
			var label0_nodes = children(label0);
			t3 = claim_text(label0_nodes, "User Name:");
			label0_nodes.forEach(detach_dev);
			t4 = claim_space(fieldset0_nodes);

			input0 = claim_element(fieldset0_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			fieldset0_nodes.forEach(detach_dev);
			t5 = claim_space(form_nodes);
			fieldset1 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset1_nodes = children(fieldset1);
			label1 = claim_element(fieldset1_nodes, "LABEL", {});
			var label1_nodes = children(label1);
			t6 = claim_text(label1_nodes, "Email:");
			label1_nodes.forEach(detach_dev);
			t7 = claim_space(fieldset1_nodes);

			input1 = claim_element(fieldset1_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			fieldset1_nodes.forEach(detach_dev);
			t8 = claim_space(form_nodes);
			fieldset2 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset2_nodes = children(fieldset2);
			label2 = claim_element(fieldset2_nodes, "LABEL", {});
			var label2_nodes = children(label2);
			t9 = claim_text(label2_nodes, "Password:");
			label2_nodes.forEach(detach_dev);
			t10 = claim_space(fieldset2_nodes);

			input2 = claim_element(fieldset2_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true,
				style: true
			});

			t11 = claim_space(fieldset2_nodes);

			input3 = claim_element(fieldset2_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			fieldset2_nodes.forEach(detach_dev);
			t12 = claim_space(form_nodes);
			button = claim_element(form_nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t13 = claim_text(button_nodes, "Save Settings");
			button_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Settings | ProfitFlow";
			attr_dev(h1, "class", "text-xs-center");
			add_location(h1, file, 23, 16, 507);
			add_location(label0, file, 28, 6, 655);
			attr_dev(input0, "class", "form-control form-control-lg");
			attr_dev(input0, "name", "username");
			attr_dev(input0, "type", "text");
			attr_dev(input0, "placeholder", "Username");
			input0.value = input0_value_value = /*user*/ ctx[0].name;
			add_location(input0, file, 29, 6, 688);
			attr_dev(fieldset0, "class", "form-group");
			add_location(fieldset0, file, 27, 5, 618);
			add_location(label1, file, 39, 6, 914);
			attr_dev(input1, "class", "form-control form-control-lg");
			attr_dev(input1, "name", "email");
			attr_dev(input1, "type", "email");
			attr_dev(input1, "placeholder", "Email");
			input1.value = input1_value_value = /*user*/ ctx[0].email;
			add_location(input1, file, 40, 6, 943);
			attr_dev(fieldset1, "class", "form-group");
			add_location(fieldset1, file, 38, 5, 877);
			add_location(label2, file, 50, 6, 1165);
			attr_dev(input2, "class", "form-control form-control-lg");
			attr_dev(input2, "name", "password");
			attr_dev(input2, "type", "password");
			attr_dev(input2, "placeholder", "New Password");
			set_style(input2, "margin-bottom", "10px");
			add_location(input2, file, 51, 6, 1197);
			attr_dev(input3, "class", "form-control form-control-lg");
			attr_dev(input3, "name", "password");
			attr_dev(input3, "type", "password");
			attr_dev(input3, "placeholder", "Confirm Password");
			add_location(input3, file, 57, 6, 1378);
			attr_dev(fieldset2, "class", "form-group");
			add_location(fieldset2, file, 49, 5, 1128);
			attr_dev(button, "class", "btn btn-lg btn-primary pull-xs-right");
			add_location(button, file, 65, 5, 1553);
			attr_dev(form, "method", "POST");
			attr_dev(form, "action", "?/save");
			add_location(form, file, 25, 16, 573);
			attr_dev(div0, "class", "col-md-6 offset-md-3 col-xs-12");
			add_location(div0, file, 22, 12, 445);
			attr_dev(div1, "class", "row");
			add_location(div1, file, 21, 8, 414);
			attr_dev(div2, "class", "container page");
			add_location(div2, file, 20, 4, 376);
			attr_dev(div3, "class", "settings-page");
			add_location(div3, file, 19, 0, 343);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, div3, anchor);
			append_hydration_dev(div3, div2);
			append_hydration_dev(div2, div1);
			append_hydration_dev(div1, div0);
			append_hydration_dev(div0, h1);
			append_hydration_dev(h1, t1);
			append_hydration_dev(div0, t2);
			append_hydration_dev(div0, form);
			append_hydration_dev(form, fieldset0);
			append_hydration_dev(fieldset0, label0);
			append_hydration_dev(label0, t3);
			append_hydration_dev(fieldset0, t4);
			append_hydration_dev(fieldset0, input0);
			append_hydration_dev(form, t5);
			append_hydration_dev(form, fieldset1);
			append_hydration_dev(fieldset1, label1);
			append_hydration_dev(label1, t6);
			append_hydration_dev(fieldset1, t7);
			append_hydration_dev(fieldset1, input1);
			append_hydration_dev(form, t8);
			append_hydration_dev(form, fieldset2);
			append_hydration_dev(fieldset2, label2);
			append_hydration_dev(label2, t9);
			append_hydration_dev(fieldset2, t10);
			append_hydration_dev(fieldset2, input2);
			append_hydration_dev(fieldset2, t11);
			append_hydration_dev(fieldset2, input3);
			append_hydration_dev(form, t12);
			append_hydration_dev(form, button);
			append_hydration_dev(button, t13);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*user*/ 1 && input0_value_value !== (input0_value_value = /*user*/ ctx[0].name) && input0.value !== input0_value_value) {
				prop_dev(input0, "value", input0_value_value);
			}

			if (dirty & /*user*/ 1 && input1_value_value !== (input1_value_value = /*user*/ ctx[0].email) && input1.value !== input1_value_value) {
				prop_dev(input1, "value", input1_value_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload() {
	return this.fetch(`settings.json`).then(r => r.json()).then(user => {
		return { user };
	});
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Settings', slots, []);
	let { user } = $$props;

	$$self.$$.on_mount.push(function () {
		if (user === undefined && !('user' in $$props || $$self.$$.bound[$$self.$$.props['user']])) {
			console.warn("<Settings> was created without expected prop 'user'");
		}
	});

	const writable_props = ['user'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Settings> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('user' in $$props) $$invalidate(0, user = $$props.user);
	};

	$$self.$capture_state = () => ({ preload, user });

	$$self.$inject_state = $$props => {
		if ('user' in $$props) $$invalidate(0, user = $$props.user);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [user];
}

class Settings extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { user: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Settings",
			options,
			id: create_fragment.name
		});
	}

	get user() {
		throw new Error("<Settings>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set user(value) {
		throw new Error("<Settings>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { Settings as default, preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguMmY0ZmY4MWMuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvc2V0dGluZ3MvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHByZWxvYWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZmV0Y2goYHNldHRpbmdzLmpzb25gKS50aGVuKHIgPT4gci5qc29uKCkpLnRoZW4odXNlciA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiB7IHVzZXIgfTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c2NyaXB0PlxyXG4gICAgZXhwb3J0IGxldCB1c2VyO1xyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZT5cclxuPC9zdHlsZT5cclxuXHJcbjxzdmVsdGU6aGVhZD5cclxuICAgIDx0aXRsZT5TZXR0aW5ncyB8IFByb2ZpdEZsb3c8L3RpdGxlPlxyXG48L3N2ZWx0ZTpoZWFkPlxyXG5cclxuPGRpdiBjbGFzcz1cInNldHRpbmdzLXBhZ2VcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXIgcGFnZVwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1tZC02IG9mZnNldC1tZC0zIGNvbC14cy0xMlwiPlxyXG4gICAgICAgICAgICAgICAgPGgxIGNsYXNzPVwidGV4dC14cy1jZW50ZXJcIj5Zb3VyIFNldHRpbmdzOjwvaDE+XHJcblxyXG4gICAgICAgICAgICAgICAgPGZvcm0gbWV0aG9kPVwiUE9TVFwiIGFjdGlvbj1cIj8vc2F2ZVwiPlxyXG5cclxuXHRcdFx0XHRcdDxmaWVsZHNldCBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cclxuXHRcdFx0XHRcdFx0PGxhYmVsPlVzZXIgTmFtZTo8L2xhYmVsPlxyXG5cdFx0XHRcdFx0XHQ8aW5wdXRcclxuXHRcdFx0XHRcdFx0XHRjbGFzcz1cImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtbGdcIlxyXG5cdFx0XHRcdFx0XHRcdG5hbWU9XCJ1c2VybmFtZVwiXHJcblx0XHRcdFx0XHRcdFx0dHlwZT1cInRleHRcIlxyXG5cdFx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPVwiVXNlcm5hbWVcIlxyXG5cdFx0XHRcdFx0XHRcdHZhbHVlPXt1c2VyLm5hbWV9XHJcblx0XHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHQ8L2ZpZWxkc2V0PlxyXG5cclxuXHRcdFx0XHRcdDxmaWVsZHNldCBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cclxuXHRcdFx0XHRcdFx0PGxhYmVsPkVtYWlsOjwvbGFiZWw+XHJcblx0XHRcdFx0XHRcdDxpbnB1dFxyXG5cdFx0XHRcdFx0XHRcdGNsYXNzPVwiZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1sZ1wiXHJcblx0XHRcdFx0XHRcdFx0bmFtZT1cImVtYWlsXCJcclxuXHRcdFx0XHRcdFx0XHR0eXBlPVwiZW1haWxcIlxyXG5cdFx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPVwiRW1haWxcIlxyXG5cdFx0XHRcdFx0XHRcdHZhbHVlPXt1c2VyLmVtYWlsfVxyXG5cdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0PC9maWVsZHNldD5cclxuXHJcblx0XHRcdFx0XHQ8ZmllbGRzZXQgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XHJcblx0XHRcdFx0XHRcdDxsYWJlbD5QYXNzd29yZDo8L2xhYmVsPlxyXG5cdFx0XHRcdFx0XHQ8aW5wdXRcclxuXHRcdFx0XHRcdFx0XHRjbGFzcz1cImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtbGdcIlxyXG5cdFx0XHRcdFx0XHRcdG5hbWU9XCJwYXNzd29yZFwiXHJcblx0XHRcdFx0XHRcdFx0dHlwZT1cInBhc3N3b3JkXCJcclxuXHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj1cIk5ldyBQYXNzd29yZFwiIHN0eWxlPVwibWFyZ2luLWJvdHRvbTogMTBweDtcIlxyXG5cdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHQ8aW5wdXRcclxuXHRcdFx0XHRcdFx0XHRjbGFzcz1cImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtbGdcIlxyXG5cdFx0XHRcdFx0XHRcdG5hbWU9XCJwYXNzd29yZFwiXHJcblx0XHRcdFx0XHRcdFx0dHlwZT1cInBhc3N3b3JkXCJcclxuXHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj1cIkNvbmZpcm0gUGFzc3dvcmRcIlxyXG5cdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0PC9maWVsZHNldD5cclxuXHJcblx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1sZyBidG4tcHJpbWFyeSBwdWxsLXhzLXJpZ2h0XCI+U2F2ZSBTZXR0aW5nczwvYnV0dG9uPlxyXG5cdFx0XHRcdDwvZm9ybT5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L2Rpdj5cclxuXHQ8L2Rpdj5cclxuPC9kaXY+XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2FBdUIyQyxnQkFBYyxDQUFBLENBQUE7Ozs7O2FBSzVDLFlBQVUsQ0FBQSxDQUFBOzs7Ozs7YUFXVixRQUFNLENBQUEsQ0FBQTs7Ozs7O2FBV04sV0FBUyxDQUFBLENBQUE7Ozs7Ozs7Y0Flb0MsZUFBYSxDQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OzZCQTFDNUIsZ0JBQWMsQ0FBQSxDQUFBOzs7Ozs7Ozs7aUNBSzVDLFlBQVUsQ0FBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztpQ0FXVixRQUFNLENBQUEsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7aUNBV04sV0FBUyxDQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0NBZW9DLGVBQWEsQ0FBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEvQnpELEdBQUEsTUFBQSxDQUFBLEtBQUEsR0FBQSxrQkFBQSxZQUFBLEdBQUksSUFBQyxJQUFJLENBQUE7Ozs7Ozs7OztBQVdULEdBQUEsTUFBQSxDQUFBLEtBQUEsR0FBQSxrQkFBQSxZQUFBLEdBQUksSUFBQyxLQUFLLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0ExQnhCLG9CQW1ETSxDQUFBLE1BQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxDQUFBLENBQUE7R0FsREYsb0JBaURHLENBQUEsSUFBQSxFQUFBLElBQUEsQ0FBQSxDQUFBO0dBaERDLG9CQStDQSxDQUFBLElBQUEsRUFBQSxJQUFBLENBQUEsQ0FBQTtHQTlDSSxvQkE2Q0gsQ0FBQSxJQUFBLEVBQUEsSUFBQSxDQUFBLENBQUE7R0E1Q08sb0JBQThDLENBQUEsSUFBQSxFQUFBLEVBQUEsQ0FBQSxDQUFBOzs7R0FFOUMsb0JBeUNMLENBQUEsSUFBQSxFQUFBLElBQUEsQ0FBQSxDQUFBO0dBdkNOLG9CQVNXLENBQUEsSUFBQSxFQUFBLFNBQUEsQ0FBQSxDQUFBO0dBUlYsb0JBQXlCLENBQUEsU0FBQSxFQUFBLE1BQUEsQ0FBQSxDQUFBOzs7R0FDekIsb0JBTUUsQ0FBQSxTQUFBLEVBQUEsTUFBQSxDQUFBLENBQUE7O0dBR0gsb0JBU1csQ0FBQSxJQUFBLEVBQUEsU0FBQSxDQUFBLENBQUE7R0FSVixvQkFBcUIsQ0FBQSxTQUFBLEVBQUEsTUFBQSxDQUFBLENBQUE7OztHQUNyQixvQkFNRSxDQUFBLFNBQUEsRUFBQSxNQUFBLENBQUEsQ0FBQTs7R0FHSCxvQkFjVyxDQUFBLElBQUEsRUFBQSxTQUFBLENBQUEsQ0FBQTtHQWJWLG9CQUF3QixDQUFBLFNBQUEsRUFBQSxNQUFBLENBQUEsQ0FBQTs7O0dBQ3hCLG9CQUtFLENBQUEsU0FBQSxFQUFBLE1BQUEsQ0FBQSxDQUFBOztHQUNGLG9CQUtFLENBQUEsU0FBQSxFQUFBLE1BQUEsQ0FBQSxDQUFBOztHQUdILG9CQUEyRSxDQUFBLElBQUEsRUFBQSxNQUFBLENBQUEsQ0FBQTs7OztBQS9CbEUsR0FBQSxJQUFBLEtBQUEsWUFBQSxDQUFBLElBQUEsa0JBQUEsTUFBQSxrQkFBQSxZQUFBLEdBQUksSUFBQyxJQUFJLENBQUEsSUFBQSxNQUFBLENBQUEsS0FBQSxLQUFBLGtCQUFBLEVBQUE7Ozs7QUFXVCxHQUFBLElBQUEsS0FBQSxZQUFBLENBQUEsSUFBQSxrQkFBQSxNQUFBLGtCQUFBLFlBQUEsR0FBSSxJQUFDLEtBQUssQ0FBQSxJQUFBLE1BQUEsQ0FBQSxLQUFBLEtBQUEsa0JBQUEsRUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7U0E1Q0osT0FBTyxHQUFBO0FBQ1osQ0FBQSxPQUFBLElBQUksQ0FBQyxLQUFLLENBQWtCLENBQUEsYUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUksQ0FBQSxDQUFBLElBQUksQ0FBQyxJQUFJLElBQUE7V0FDbkQsSUFBSSxFQUFBLENBQUE7Ozs7Ozs7T0FNVixJQUFJLEVBQUEsR0FBQSxPQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
